---
import { videos } from "../../data/videos.js";
import Layout from "../../layouts/Layout.astro";
import Navbar from "../../components/navbar.astro";
import Footer from "../../components/footer.astro";

const { params } = Astro;
const videoId = params.id;
const video = videos.find((v) => v.url.includes(videoId ?? ""));

function timeAgo(dateString: string) {
  if (!dateString) return "Fecha desconocida";
  const now = new Date();
  const date = new Date(dateString);
  if (isNaN(date.getTime())) return "Fecha inválida";
  const diffMs = now.getTime() - date.getTime();
  const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));
  const diffMonths = Math.floor(diffDays / 30);
  const diffYears = Math.floor(diffDays / 365);
  if (diffYears > 0) return `hace ${diffYears} año${diffYears > 1 ? "s" : ""}`;
  if (diffMonths > 0)
    return `hace ${diffMonths} mes${diffMonths > 1 ? "es" : ""}`;
  if (diffDays > 0) return `hace ${diffDays} día${diffDays > 1 ? "s" : ""}`;
  return "Hoy";
}
---

<Layout>
  {/* Navbar superior */}
  <Navbar />
  {
    video ? (
      // Si se encuentra el video, muestra el contenido principal
      <div class="container py-5">
        <div class="row">
          {/* Columna principal: reproductor y detalles del video */}
          <div class="col-12 col-lg-9 d-flex flex-column">
            {/* Reproductor de video (iframe de YouTube) */}
            <div class="video-detail-player mb-4 w-100">
              <iframe
                src={video.url}
                title={video.titulo}
                allowfullscreen
                loading="lazy"
                style="width:100%; height:100%; border:0; border-radius:1.5rem; background:#000;"
              />
            </div>
            {/* Título del video */}
            <h2 class="text-white fw-bold text-start ms-5 ">{video.titulo}</h2>
            {/* Vistas y fecha relativa */}
            <div class="text-secondary text-start ms-5 ">
              • {parseInt(video.views).toLocaleString()} views{" "}
              {timeAgo(video.date)}
            </div>
            {/* Descripción del video en un collapse de Bootstrap */}
            <div class="text-white text-start ms-5 mt-3">
              <h5>Descripción</h5>
              {/* Botón para mostrar/ocultar la descripción */}
              <button
                class="btn btn-outline-secondary mb-2"
                type="button"
                data-bs-toggle="collapse"
                data-bs-target="#descripcionCollapse"
                aria-expanded="false"
                aria-controls="descripcionCollapse"
              >
                Mostrar/Ocultar descripción
              </button>
              {/* Collapse de Bootstrap para la descripción */}
              <div class="collapse" id="descripcionCollapse">
                {/* Respeta los saltos de línea en la descripción */}
                <p style="white-space: pre-line;">
                  {video.descripcion ?? "Sin descripción disponible."}
                </p>
              </div>
              {/* Botón para ir a YouTube y añadir comentario */}
              <div><a
                href={video.url.replace("embed/", "watch?v=")}
                target="_blank"
                rel="noopener"
                class="btn btn-danger mt-2"
              >
                Añadir comentario en Youtube
              </a></div>
            </div>
            {/* Sección de comentarios */}
            <div class="text-white text-start ms-5 mt-4 bg-upload p-3 rounded">
              {/* Título de la sección de comentarios */}
              <h5>Comentarios</h5>
              {/* Si hay comentarios, los muestra en una lista, si no, muestra un mensaje */}
              {Array.isArray(video.comentarios) &&
              video.comentarios.length > 0 ? (
                <div class="d-flex flex-column gap-3">
                  {/* Mapea cada comentario a un bloque visual con avatar, autor, fecha y texto */}
                  {video.comentarios.map((comentario, idx) => (
                    <div class="d-flex align-items-start bg-grey-dark rounded p-3">
                      {/* Avatar generado a partir del nombre del autor */}
                      <img
                        src={`https://ui-avatars.com/api/?name=${encodeURIComponent(comentario.author)}&background=222&color=fff&size=48`}
                        alt={comentario.author}
                        class="rounded-circle me-3"
                        width="48"
                        height="48"
                        loading="lazy"
                      />
                      <div>
                        {/* Nombre del autor */}
                        <div class="fw-bold small">{comentario.author}</div>
                        {/* Fecha del comentario */}
                        <div class="text-secondary small mb-1">
                          {new Date(
                            comentario.publishedAt
                          ).toLocaleDateString()}
                        </div>
                        {/* Texto del comentario */}
                        <div class="text-white">{comentario.text}</div>
                      </div>
                    </div>
                  ))}
                </div>
              ) : (
                <p>No hay comentarios para este video.</p>
              )}
            </div>
          </div>
          {/* Columna lateral: lista de más videos */}
          <div class="col-12 col-lg-3">
            <h5 class="text-white mb-3">Más videos</h5>
            <div class="d-flex flex-column gap-3">
              {/* Muestra los demás videos como enlaces con miniatura y título */}
              {videos
                .filter((v) => v !== video)
                .map((v) => {
                  const videoId = v.url.split("/").pop();
                  return (
                    <a
                      href={`/video/${videoId}`}
                      class="d-flex text-decoration-none text-white video-sidebar-item p-2 rounded bg-grey-dark"
                    >
                      {/* Miniatura del video */}
                      <img
                        src={`https://img.youtube.com/vi/${videoId}/mqdefault.jpg`}
                        alt={v.titulo}
                        style="width: 100px; height: 56px; object-fit: cover; border-radius: 0.5rem;"
                      />
                      <div class="ms-3 flex-grow-1">
                        {/* Título del video */}
                        <div class="fw-bold small text-start">{v.titulo}</div>
                        {/* Vistas y fecha relativa */}
                        <div class="text-secondary small text-start">
                          {parseInt(v.views).toLocaleString()} views{" "}
                          {timeAgo(v.date)}
                        </div>
                      </div>
                    </a>
                  );
                })}
            </div>
          </div>
        </div>
      </div>
    ) : (
      // Si no se encuentra el video, muestra un mensaje de error
      <div class="container py-5 text-center text-white">
        <h2>Video no encontrado</h2>
        <a href="/" class="btn btn-secondary mt-3">
          Volver al inicio
        </a>
      </div>
    )
  }

  {/* Estilos para el reproductor y la barra lateral */}
  <style>
    .video-detail-player {
      width: 100%;
      max-width: 900px;
      aspect-ratio: 16 / 9;
      margin: 0 auto;
      background: #000;
      border-radius: 1.5rem;
      overflow: hidden;
    }
    .video-sidebar-item:hover {
      background: #222;
      text-decoration: none;
    }
  </style>
  {/* Pie de página */}
  <Footer />
</Layout>
